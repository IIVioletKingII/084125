<template>
	<div class="page" data-name="home">
		<header id="header" class="d-flex justify-content-center">

			<a class="mobile-nav-toggle">
				<i class="icon fa-solid fa-bars"></i>
			</a>
			<div class="mobile-nav-background"></div>
			<nav id="navbar" class="navbar nav-menu">
				<a class="nav-link scrollto active" data-target="home">
					<i class="icon fa-solid fa-home"></i>
					<span>Home</span>
				</a>
				<a class="nav-link scrollto" data-target="about">
					<i class="icon fa-solid fa-user"></i>
					<span>About</span>
				</a>
				<a class="nav-link scrollto" data-target="gallery">
					<i class="fa-solid fa-camera"></i>
					<span>Gallery</span>
				</a>
				<a class="nav-link scrollto" data-target="resume">
					<i class="icon fa-solid fa-file"></i>
					<span>Resume</span>
				</a>

			</nav>
		</header>

		<!-- <div class="page-content"> -->

		<div class="page-content">

			<div class="page-scroller">

				<div id="home" class="page-group">
					<div class="hero-picture lazy lazy-fade-in"></div>
				</div>
				<div id="about" class="page-group page-panel">
					<div class="block-title">About</div>
					<div>Blee Blah Dee Dah</div>
				</div>
				<div id="gallery" class="page-group page-panel">
					<div class="block-title">Gallery</div>
					<div id="photo-gallery" class="photo-gallery">
					</div>
					<div id="photo-viewer">
						<i class="fa-solid fa-xmark"></i>
						<img id="fullscreen-image" class="lazy lazy-fade-in" alt="Picture of Sam"
							data-src="https://raw.githubusercontent.com/IIVioletKingII/sam-depoule/main/src/assets/sam-258.jpg" />

					</div>
				</div>


				<div id="resume" class="page-group" style="display: flex; flex-wrap: wrap; justify-content: center;">

					<!-- https://bootstrapmade.com/demo/BizLand/ -->
					<div class="page-panel" style="max-width: 2000px;">

						<div class="block-title">Resume</div>

						<div class="resume-header">Education</div>
						<!-- the whole section with 1+ tiles -->
						<div class="resume-section" data-sections="2">
							<div class="resume-tile">
								<div class="resume-icon">
									<i class="fa-solid fa-graduation-cap"></i>
								</div>
								<div class="resume-subheader">Hazen High School</div>
								<div class="resume-info">
									<span>Expected graduation June 2023</span>
									<span>GPA: 3.9</span>
									<div class="resume-list" data-columns="2">
										<ul>
											<li>
												<span>AP Physics</span>
											</li>
											<li>
												<span>AP Computer Science</span>
											</li>
											<li>
												<span>Program Solving</span>
											</li>
											<li>
												<span>Trigonometry</span>
											</li>
											<li>
												<span>University of Washington's CSE163 Data Science</span>
											</li>
											<li>
												<span>Programming leader in the Robotics Team</span>
											</li>
										</ul>
									</div>
								</div>

							</div>
							<div class="resume-tile">
								<div class="resume-icon">
									<i class="fa-solid fa-school"></i>
								</div>
								<div class="resume-subheader">Bellevue College</div>
								<div class="resume-info">
									<span>Bellevue • September 2021 - Present</span>
									<div class="resume-list" data-columns="2">
										<ul>
											<li>
												<span>Calc I through III</span>
											</li>
											<li>
												<span>PHYS121 Calc Physics</span>
											</li>
										</ul>
									</div>
								</div>

							</div>
						</div>

						<div class="resume-header">Work Experience</div>
						<!-- the whole section with 1+ tiles -->
						<div class="resume-section" data-sections="2">
							<div class="resume-tile">
								<div class="resume-icon">
									<i class="fa-brands fa-android"></i>
								</div>
								<div class="resume-subheader">Programming Lead</div>
								<div class="resume-info">
									<span>Hazen Robotics</span>
									<span>Renton • August 2022 - Present</span>
									<div class="resume-list">
										<ul>
											<li>
												<span>Teaching new members how to program and work in an organized
													fashion</span>
											</li>
											<li>
												<span>Organize team members' projects/assignments based on skills and
													time commitment</span>
											</li>
											<li>
												<span>Mentoring elementary/middle school robotics team (FIRST Lego
													League)</span>
											</li>
										</ul>
									</div>
								</div>

							</div>
							<div class="resume-tile">
								<div class="resume-icon">
									<i class="fa-solid fa-chalkboard-user"></i>
								</div>
								<div class="resume-subheader">Web Developer</div>
								<div class="resume-info">
									<span>HD Fowler Co.</span>
									<span>Bellevue, Washington, United States • June 2022 - Present</span>
									<div class="resume-list">
										<ul>
											<li>
												<span>Worked with back-end developers to connect data to users, with a
													device friendly
													interface, via the web</span>
											</li>
										</ul>
									</div>
								</div>

							</div>
						</div>

						<div class="resume-header">Volunteer Experience</div>
						<!-- the whole section with 1+ tiles -->
						<div class="resume-section">
							<div class="resume-tile">
								<div class="resume-icon">
									<i class="fa-solid fa-sliders"></i>
								</div>
								<div class="resume-subheader">Audio Engineer</div>
								<div class="resume-info">
									<span>New Life Church</span>
									<span>Renton, Washington, United States • February 2020 - Present (1500+
										hours)</span>
									<div class="resume-list">
										<ul>
											<li>
												<span>Volunteer with whatever help may be needed. I.e. Camera, Lighting
													(Vista 3, GrandMA 3), Video Slides (ProPresenter), Audio (dLive
													S5000), etc.</span>
											</li>
											<li>
												<span>Volunteer 3-4 times per week with Sunday Services and rehearsals,
													Youth Group, and other events like funerals, weddings, school
													events, etc.</span>
											</li>

										</ul>
									</div>
								</div>

							</div>
						</div>

						<div class="resume-header">Awards and Achievements</div>
						<!-- the whole section with 1+ tiles -->
						<div class="resume-section">
							<div class="resume-tile">
								<div class="resume-icon">
									<i class="fa-solid fa-id-badge"></i>
								</div>
								<div class="resume-info">
									<div class="resume-list" data-columns="2">
										<ul>
											<li>
												<span>High School Lettered in Robotics and Band</span>
											</li>
											<li>
												<span>Eagle Scout, May 2021</span>
											</li>
										</ul>
									</div>
								</div>

							</div>
						</div>

						<div class="resume-header">Activities and Interests</div>
						<!-- the whole section with 1+ tiles -->
						<div class="resume-section">
							<div class="resume-tile">
								<div class="resume-icon">
									<i class="fa-solid fa-brain"></i>
								</div>
								<div class="resume-info">
									<div class="resume-list" data-columns="2">
										<ul>
											<li>
												<span>Computer Programming</span>
											</li>
											<li>
												<span>Band (Marching Percussion)</span>
											</li>
											<li>
												<span>Choir</span>
											</li>
											<li>
												<span>Robotics (FIRST Tech Challenge)</span>
											</li>
											<li>
												<span>Bellevue Youth Symphony Orchestra (Bassoon)</span>
											</li>
										</ul>
									</div>
								</div>

							</div>
						</div>
					</div>

				</div>


			</div>
		</div>
	</div>
</template>
<script>

	export default (props, { $, $on, $f7, $store }) => {


		function swapClassNames(element, swap1, swap2) {
			if (swapClassName(element, swap1, swap2));
			else if (swapClassName(element, swap2, swap1));
		}

		function swapClassName(element, remove, add) {
			let containsRemove = element.classList.contains(remove);
			if (containsRemove) {
				element.classList.remove(remove);
				element.classList.add(add);
			}
			return containsRemove;
		}

		$on('pageInit', (e) => {

			const imageString = 'https://raw.githubusercontent.com/IIVioletKingII/sam-depoule/main/src/assets/sam-';

			// create gallery
			var gallery = document.getElementById('photo-gallery');
			let children = '';
			const picturesList = [268, 260, 258, 253, 249, 239, 236, 234, 231, 204, 203, 200, 199, 198, 197, 184, 179, 178, 177, 176, 172, 171, 165, 164, 162, 159, 157, 155, 153, 151, 148, 144, 137, 136, 135, 134, 133, 128, 127, 126, 125, 124, 123, 122, 121, 120, 118, 117, 116, 114, 111, 110, 109, 107, 104, 102, 101, 94, 91, 88, 87, 80, 77, 72, 71, 68, 67, 66, 64, 62, 61, 49, 48, 47, 46, 29, 26, 25, 24, 23, 19, 18, 17, 3, 2, 1];
			const specialList = {
				wide: [234, 204, 203, 184, 172, 165, 164, 159, 157, 155, 153, 151, 148, 144, 136, 134, 125, 122, 121, 114, 107, 67, 24, 23, 2, 1],
				tall: [231, 137, 128, 127, 110, 47, 46, 26, 3],
				extraWide: [],
				square: [258, 249, 72, 71, 68]
			};
			for (let i = 0; i < picturesList.length; i++) {

				let viewType = 'portrait';
				if (specialList['wide'].includes(picturesList[i]))
					viewType = ''
				else if (specialList['tall'].includes(picturesList[i]))
					viewType = 'tall'
				else if (specialList['square'].includes(picturesList[i]))
					viewType = 'square'
				else if (specialList['extraWide'].includes(picturesList[i]))
					viewType = 'wide'

				children += '<div id="photo-sam-' + picturesList[i] + '" class="photo-tile' + (viewType == '' ? '' : ' ') + viewType + '">'
					+ '<img data-src="' + imageString + 'scaled-' + picturesList[i] + '.jpg"'
					+ 'class="lazy lazy-fade-in picture" alt="Picture of Sam" />'
					+ '</div>\n';
			}
			gallery.innerHTML = children;


			// View Gallery Image
			let pictureViewer = document.getElementById('photo-viewer');
			let pictureView = document.getElementById('fullscreen-image');
			for (let i = 0; i < picturesList.length; i++) {
				document.getElementById('photo-sam-' + picturesList[i]).onclick = function (event) {
					// console.log(event);
					pictureView.src = imageString + picturesList[i] + '.jpg';
					pictureViewer.style.display = 'flex';
				}
			}

			pictureViewer.onclick = function (event) {
				// console.log(event)
				pictureViewer.style.display = 'none';
			}


			// Screen Size - mobile menu open resize
			function resizeWindowCheckMenu() {
				initStartPoses();
				if (window.innerWidth >= 994 && mobileViewOpen())
					toggleMenu();
			}

			window.addEventListener('resize', resizeWindowCheckMenu);


			// Nav Menu - onclick nav-links
			var selectors = document.getElementsByClassName('nav-link');

			function clearOthers(i) {
				selectors = document.getElementsByClassName('nav-link');
				for (let j = 0; j < selectors.length; j++)
					if (i != j)
						selectors.item(j).classList.remove('active');
			}

			function clear() {
				let actives = document.getElementsByClassName('nav-link active');
				for (let j = 0; j < actives.length; j++)
					actives.item(j).classList.remove('active');
			}

			function select(i) {
				clear();
				selectors[i].classList.add('active');
			}

			var observers = Array.apply(null, Array(4));

			for (let i = 0; i < selectors.length; i++) {
				selectors[i].onclick = function () {
					document.getElementById(selectors[i].dataset.target).scrollIntoView();
					select(i);
					if (mobileViewOpen())
						toggleMenu();
				}
			}

			for (let i = 0; i < observers.length; i++) {
				observers[i] = new IntersectionObserver(function (entries) {
					if (entries[0].isIntersecting === true) {
						console.log(entries[0].target, 'Item has just APPEARED!');
						select(i);
					} else {
						console.log('Item has just DISAPPEARED!');

					}
				}, { threshold: [0/* .25 */] });
			}

			var startPoses = Array.apply(null, Array(4));
			function initStartPoses() {
				let width = document.getElementById('home').offsetWidth;
				for (let i = 0; i < startPoses.length; i++)
					startPoses[i] = width * i;
			}

			initStartPoses();

			var prevScroll = 0;
			var lastPose = 0;
			document.getElementsByClassName('page-scroller')[0].onscroll = function (e) {
				if (e.currentTarget.scrollLeft != prevScroll) {
					prevScroll = e.currentTarget.scrollLeft;
					let val = nearPose(prevScroll, startPoses, 70);
					if (val != lastPose && val >= 0) {
						lastPose = val;
						select(lastPose);
					}
				}
			}

			function nearPose(x, poses, range) {
				for (let i = 0; i < poses.length; i++)
					if (withinRange(x, poses[i], range))
						return i;
				return -1;
			}

			function withinRange(x, num, range, incMin, incMax) {
				return withinNums(x, num - range / 2, num + range / 2, incMin, incMax);
			}

			function withinNums(x, min, max, incMin, incMax) {
				if (incMin == undefined)
					incMin = true;
				if (incMax == undefined)
					incMax = true;

				return ((incMin && x >= min) || x > min)
					&& ((incMax && x <= max) || x < max)
			}

			// Nav Menu - onclick mobile menu
			var navBg = document.getElementsByClassName('mobile-nav-background')[0];
			var navMenu = document.getElementsByClassName('nav-menu')[0];
			var mobileNavToggle = document.getElementsByClassName('mobile-nav-toggle')[0];
			var header = document.getElementById('header');
			let linesEl = mobileNavToggle.firstChild;

			function mobileViewOpen() {
				return navMenu.classList.contains('mobile-nav-menu')
			}

			function toggleMenu(setMobile) {
				let isUndefined = setMobile == undefined;
				if ((!isUndefined && setMobile) || swapClassName(linesEl, 'fa-bars', 'fa-bars-staggered')) {
					navBg.classList.add('mobile-nav-active');
					swapClassName(navMenu, 'nav-menu', 'mobile-nav-menu')
				} else if ((!isUndefined && !setMobile) || swapClassName(linesEl, 'fa-bars-staggered', 'fa-bars')) {
					navBg.classList.remove('mobile-nav-active');
					swapClassName(navMenu, 'mobile-nav-menu', 'nav-menu')
				}
			}

			mobileNavToggle.onclick = function () {
				toggleMenu();
			}
			navBg.onclick = function () {
				if (mobileViewOpen())
					toggleMenu();
			}




		})
		return $render;
	}
</script>