<template>
	<div class="page" data-name="home">
		<header id="header" class="d-flex justify-content-center">

			<a class="mobile-nav-toggle">
				<i class="icon fa-solid fa-bars"></i>
			</a>
			<div class="mobile-nav-background"></div>
			<nav id="navbar" class="navbar nav-menu">
				<a class="tab-link active" href="#hero">
					<i class="icon fa-solid fa-home"></i>
					<span>Home</span>
				</a>
				<a class="tab-link" href="#about">
					<i class="icon fa-solid fa-user"></i>
					<span>About</span>
				</a>
				<a class="tab-link" href="#gallery">
					<i class="fa-solid fa-camera"></i>
					<span>Gallery</span>
				</a>
				<a class="tab-link" href="#resume">
					<i class="icon fa-solid fa-file"></i>
					<span>Resume</span>
				</a>

			</nav>
		</header>

		<div class="page-content ">
			<swiper-container class="tabs">
				<swiper-slide id="hero" class="page-content tab tab-active hero-picture">

				</swiper-slide>
				<swiper-slide id="about" class="page-content tab">

					<div class="block if-not-md if-not-ios"></div>
					<div class="block${$f7.device.desktop ? ' navbar-margin' : ''}">

						<div class="block-title">About</div>
						<p>Greetings! I'm Sam DePoule! I am a programmer, musician, and technology/production
							volunteer. I love to play bassoon, piano, sing, work on sites or apps, and mix audio.
						</p>
					</div>

				</swiper-slide>
				<swiper-slide id="gallery" class="page-content tab">
					<div class="block${$f7.device.desktop ? ' navbar-margin' : ''}">
						<div class="block-title">Gallery</div>
						<div id="photo-gallery" class="photo-gallery">
						</div>
						<div id="photo-viewer">
							<i class="fa-solid fa-xmark"></i>
							<img id="fullscreen-image" class="lazy lazy-fade-in" alt="Picture of Sam"
								data-src="https://raw.githubusercontent.com/IIVioletKingII/sam-depoule/main/src/assets/sam-258.jpg" />
						</div>
					</div>
				</swiper-slide>
				<swiper-slide id="resume" class="page-content tab tab">
					<div class="block${$f7.device.desktop ? ' navbar-margin' : ''}"
						style="display: flex; flex-wrap: wrap; justify-content: center;">

						<!-- https://bootstrapmade.com/demo/BizLand/ -->

						<div class="block-title">Resume</div>


						${resumeSections.map((resumeSection) => $h`
						<div class="resume-header">${resumeSection.sectionTitle}</div>
						<div class="resume-section" data-sections="${resumeSection.sections}">
							${resumeSection.tiles?.map((tile) => $h`

							<div class="resume-tile">
								<div class="resume-icon">
									<i class="${tile.icon}"></i>
								</div>

								<div class="resume-subheader">${tile.title}</div>
								<div class="resume-info">
									${tile.subtitles?.map((subtitle) => $h`
									<span>${subtitle}</span>
									`)}
									<div class="resume-list" data-columns="${tile.detailsListColumns}">
										<ul>
											${tile.detailsList?.map((detail) => $h`
											<li><span>${detail}</span></li>
											`)}
										</ul>
									</div>
								</div>

							</div>
							`)}
						</div>

						`)}


					</div>
				</swiper-slide>
			</swiper-container>

		</div>
	</div>
</template>
<script>

	export default (props, { $, $on, $f7, $store }) => {

		let resumeSections = $store.state.resumeSections;


		function swapClassNames(element, swap1, swap2) {
			if (swapClassName(element, swap1, swap2));
			else if (swapClassName(element, swap2, swap1));
		}

		function swapClassName(element, remove, add) {
			let containsRemove = element.classList.contains(remove);
			if (containsRemove) {
				element.classList.remove(remove);
				element.classList.add(add);
			}
			return containsRemove;
		}

		$on('pageInit', (e) => {

			const imageString = 'https://raw.githubusercontent.com/IIVioletKingII/sam-depoule/main/src/assets/sam-';

			// create gallery
			let children = '';
			let picturesList = [268, 260, 258, 253, 249, 239, 236, 234, 231, 204, 203, 200, 199, 198, 197, 184, 179, 178, 177, 176, 172, 171, 165, 164, 162, 159, 157, 155, 153, 151, 148, 144, 137, 136, 135, 134, 133, 128, 127, 126, 125, 124, 123, 122, 121, 120, 118, 117, 116, 114, 111, 110, 109, 107, 104, 102, 101, 94, 91, 88, 87, 80, 77, 72, 71, 68, 67, 66, 64, 62, 61, 49, 48, 47, 46, 29, 26, 25, 24, 23, 19, 18, 17, 3, 2, 1];
			let specialList = {
				wide: [234, 204, 203, 184, 172, 165, 164, 159, 157, 155, 153, 151, 148, 144, 136, 134, 125, 122, 121, 114, 107, 67, 24, 23, 2, 1],
				tall: [231, 137, 128, 127, 110, 47, 46, 26, 3],
				extraWide: [],
				square: [258, 249, 72, 71, 68]
			};

			document.getElementById('photo-gallery').innerHTML = picturesList.map((pictureNum) => {
				let viewType = 'portrait';
				if (specialList.wide.includes(pictureNum))
					viewType = ''
				else if (specialList.tall.includes(pictureNum))
					viewType = 'tall'
				else if (specialList.square.includes(pictureNum))
					viewType = 'square'
				else if (specialList.extraWide.includes(pictureNum))
					viewType = 'wide'

				return `<div id="photo-sam-${pictureNum}" class="photo-tile${(viewType == '' ? '' : ' ') + viewType}">
					<img src="${imageString}scaled-${pictureNum}.jpg"
					class="lazy lazy-fade-in picture" alt="Picture of Sam" />
					</div>`;
			}).join('');

			// View Gallery Image
			let pictureViewer = document.getElementById('photo-viewer');
			let pictureView = document.getElementById('fullscreen-image');
			let header = document.getElementById('header');
			for (let i = 0; i < picturesList.length; i++) {
				document.getElementById('photo-sam-' + picturesList[i]).onclick = function (event) {
					// console.log(event);
					pictureView.src = imageString + picturesList[i] + '.jpg';
					pictureViewer.style.display = 'flex';
					header.style.display = 'none';
				}
			}

			pictureViewer.onclick = function (event) {
				// console.log(event)
				pictureViewer.style.display = 'none';
				header.style.display = 'flex';
			}


			// Nav Menu - onclick tab-links
			var selectors = document.getElementsByClassName('tab-link');

			function clearOthers(i) {
				selectors = document.getElementsByClassName('tab-link');
				for (let j = 0; j < selectors.length; j++)
					if (i != j)
						selectors.item(j).classList.remove('active');
			}

			function clear() {
				let actives = document.getElementsByClassName('tab-link active');
				for (let j = 0; j < actives.length; j++)
					actives.item(j).classList.remove('active');
			}

			function select(i) {
				clear();
				selectors[i].classList.add('active');
			}

			var observers = Array.apply(null, Array(4));

			for (let i = 0; i < selectors.length; i++) {
				selectors[i].onclick = function () {
					select(i);
					if (mobileViewOpen())
						toggleMenu();
				}
			}

			for (let i = 0; i < observers.length; i++) {
				observers[i] = new IntersectionObserver(function (entries) {
					if (entries[0].isIntersecting === true) {
						console.log(entries[0].target, 'Item has just APPEARED!');
						select(i);
					} else {
						console.log('Item has just DISAPPEARED!');

					}
				}, { threshold: [0/* .25 */] });
			}

			function nearPose(x, poses, range) {
				for (let i = 0; i < poses.length; i++)
					if (withinRange(x, poses[i], range))
						return i;
				return -1;
			}

			function withinRange(x, num, range, incMin, incMax) {
				return withinNums(x, num - range / 2, num + range / 2, incMin, incMax);
			}

			function withinNums(x, min, max, incMin, incMax) {
				if (incMin == undefined)
					incMin = true;
				if (incMax == undefined)
					incMax = true;

				return ((incMin && x >= min) || x > min)
					&& ((incMax && x <= max) || x < max)
			}

			// Nav Menu - onclick mobile menu
			var navBg = document.getElementsByClassName('mobile-nav-background')[0];
			var navMenu = document.getElementsByClassName('nav-menu')[0];
			var mobileNavToggle = document.getElementsByClassName('mobile-nav-toggle')[0];
			let linesEl = mobileNavToggle.firstChild;

			function mobileViewOpen() {
				return navMenu.classList.contains('mobile-nav-menu')
			}

			function toggleMenu(setMobile) {
				let isUndefined = setMobile == undefined;
				if ((!isUndefined && setMobile) || swapClassName(linesEl, 'fa-bars', 'fa-bars-staggered')) {
					navBg.classList.add('mobile-nav-active');
					swapClassName(navMenu, 'nav-menu', 'mobile-nav-menu')
				} else if ((!isUndefined && !setMobile) || swapClassName(linesEl, 'fa-bars-staggered', 'fa-bars')) {
					navBg.classList.remove('mobile-nav-active');
					swapClassName(navMenu, 'mobile-nav-menu', 'nav-menu')
				}
			}

			mobileNavToggle.onclick = function () {
				toggleMenu();
			}
			navBg.onclick = function () {
				if (mobileViewOpen())
					toggleMenu();
			}




		})
		return $render;
	}
</script>